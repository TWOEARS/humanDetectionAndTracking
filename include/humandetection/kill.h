// Generated by gencpp from file humandetection/kill.msg
// DO NOT EDIT!


#ifndef HUMANDETECTION_MESSAGE_KILL_H
#define HUMANDETECTION_MESSAGE_KILL_H

#include <ros/service_traits.h>


#include <humandetection/killRequest.h>
#include <humandetection/killResponse.h>


namespace humandetection
{

struct kill
{

typedef killRequest Request;
typedef killResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct kill
} // namespace humandetection


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::humandetection::kill > {
  static const char* value()
  {
    return "0d79450287345aef3f3e331856b25242";
  }

  static const char* value(const ::humandetection::kill&) { return value(); }
};

template<>
struct DataType< ::humandetection::kill > {
  static const char* value()
  {
    return "humandetection/kill";
  }

  static const char* value(const ::humandetection::kill&) { return value(); }
};


// service_traits::MD5Sum< ::humandetection::killRequest> should match 
// service_traits::MD5Sum< ::humandetection::kill > 
template<>
struct MD5Sum< ::humandetection::killRequest>
{
  static const char* value()
  {
    return MD5Sum< ::humandetection::kill >::value();
  }
  static const char* value(const ::humandetection::killRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::humandetection::killRequest> should match 
// service_traits::DataType< ::humandetection::kill > 
template<>
struct DataType< ::humandetection::killRequest>
{
  static const char* value()
  {
    return DataType< ::humandetection::kill >::value();
  }
  static const char* value(const ::humandetection::killRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::humandetection::killResponse> should match 
// service_traits::MD5Sum< ::humandetection::kill > 
template<>
struct MD5Sum< ::humandetection::killResponse>
{
  static const char* value()
  {
    return MD5Sum< ::humandetection::kill >::value();
  }
  static const char* value(const ::humandetection::killResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::humandetection::killResponse> should match 
// service_traits::DataType< ::humandetection::kill > 
template<>
struct DataType< ::humandetection::killResponse>
{
  static const char* value()
  {
    return DataType< ::humandetection::kill >::value();
  }
  static const char* value(const ::humandetection::killResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HUMANDETECTION_MESSAGE_KILL_H
